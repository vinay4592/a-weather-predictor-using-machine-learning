"8/14/24, 10:05 AM                                         Code"
""
""
""
"1      import numpy as np"
"2      import pandas as pd"
"3      import matplotlib.pyplot as plt"
"4      from sklearn.model_selection import train_test_split"
"5      from sklearn.linear_model import LinearRegression"
"6      from sklearn.metrics import mean_absolute_error, mean_squared_error"
"7"
"8      # Generate synthetic weather data"
"9      np.random.seed(0)"
"10      n_samples = 1000"
"11      humidity = np.random.uniform(0, 100, n_samples)"
"12      pressure = np.random.uniform(980, 1050, n_samples)"
"13      wind_speed = np.random.uniform(0, 30, n_samples)"
"14      temperature = 20 + 0.5 * humidity + 0.02 * pressure + 0.1 * wind_speed +"
"np.random.normal(0, 2, n_samples)"
"15"
"16      # Create a DataFrame from the generated data"
"17      weather_data = pd.DataFrame({'humidity': humidity, 'pressure': pressure,"
"'wind_speed': wind_speed, 'temperature': temperature})"
"18"
"19      # Visualize the data"
"20      plt.figure(figsize=(12, 6))"
"21      plt.subplot(2, 2, 1)"
"22      plt.scatter(weather_data['humidity'], weather_data['temperature'], alpha=0.5)"
"23      plt.xlabel('Humidity')"
"24      plt.ylabel('Temperature')"
"25      plt.title('Humidity Vs. Temperature')"
"26      plt.subplot(2, 2, 2)"
"27      plt.scatter(weather_data['pressure'], weather_data['temperature'], alpha=0.5)"
"28      plt.xlabel('Pressure')"
"29      plt.ylabel('Temperature')"
"30      plt.title('Pressure Vs. Temperature')"
"31      plt.subplot(2, 2, 3)"
"32      plt.scatter(weather_data['wind_speed'], weather_data['temperature'], alpha=0.5)"
"33      plt.xlabel('Wind Speed')"
"34      plt.ylabel('Temperature')"
"35      plt.title('Wind speed Vs. Temperature')"
"36"
"37      # Split data into features (X) and target (y)"
"38      X = weather_data[['humidity', 'pressure', 'wind_speed']]"
"39      y = weather_data['temperature']"
"40"
"41      # Split the data into training and testing sets"
"42      X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,"
"random_state=42)"
"43"
"44      # Create and train a Linear Regression model"
"45      model = LinearRegression()"
"46      model.fit(X_train, y_train)"
"47"
"48      # Make prediction on the test data"
"49      y_pred = model.predict(X_test)"
"50"
"51      # Calculate Mean Absolute Error and Mean Squared Error"
"52      mae = mean_absolute_error(y_test, y_pred)"
"53      mse = mean_squared_error(y_test, y_pred)"
"54"
"55      print(f'Mean Absolute Error: {mae}')"
"56      print(f'Mean Squared Error: {mse}')"
""
"https://tarikjaber.github.io/Code-to-PDF/                                                    1/2"
"8/14/24, 10:05 AM                                        Code"
"57"
"58      # Visualizing the model prediction vs. actual values"
"59      plt.subplot(2, 2, 4)"
"60      plt.scatter(y_test, y_pred, alpha=0.5)"
"61      plt.xlabel('Actual Temperature')"
"62      plt.ylabel('Predicted Temperature')"
"63      plt.title('Actual vs. Predicted Temperature')"
"64"
"65      # Show the plots"
"66      plt.tight_layout()"
"67      plt.show()"
"68"
"69      # Now you can use the trained model to make predictions on new data"
"70      new_data = pd.DataFrame({'humidity': [65], 'pressure': [1005], 'wind_speed': [15]})"
"71      prediction = model.predict(new_data)"
"72      print(f'Predicted Temperature: {prediction[0]}')"
""
""
""
""
"https://tarikjaber.github.io/Code-to-PDF/                                                        2/2"
""
